version: 2

models:
  - name: customer_summary
    description: "Aggregated retail summary by customer"
    columns:
      - name: CustomerID
        description: "Unique identifier for each customer"
        tests:
          - not_null
          - unique
      - name: TotalAmount
        description: "Total amount spent by the customer"
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              description: "Total amount should be non-negative"
      - name: TotalTransactions
        description: "Number of transactions made by the customer"
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 1"
              description: "Transaction count should be at least 1"
      - name: CustomerSegment
        description: "Segment classification based on spending"
        tests:
          - not_null
          - accepted_values:
              values: ['High Value', 'Medium Value', 'Low Value']
              quote: true

  - name: monthly_revenue
    description: "Revenue aggregated by month"
    columns:
      - name: Month
        description: "Month of transactions"
        tests:
          - not_null
          - unique
      - name: Revenue
        description: "Total revenue for the month"
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"

  - name: product_performance
    description: "Performance metrics for each product"
    columns:
      - name: StockCode
        description: "Unique product code"
        tests:
          - not_null
          - unique
      - name: TotalQuantitySold
        description: "Total quantity sold"
        tests:
          - not_null
      - name: TotalRevenue
        description: "Total revenue generated by this product"
        tests:
          - not_null
      - name: AvgUnitPrice
        description: "Average unit price"
        tests:
          - not_null
      - name: DistinctCustomers
        description: "Number of distinct customers who purchased this product"
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

  # Custom data quality tests
  - name: data_quality_checks
    description: "Custom tests for overall data quality"
    tests:
      - dbt_utils.expression_is_true:
          expression: "COUNT(*) > 0"
          description: "Ensure we have data"
      - dbt_utils.expression_is_true:
          expression: "COUNT(DISTINCT Country) > 1"
          description: "Ensure we have multiple countries"
      - dbt_utils.expression_is_true:
          expression: "MAX(Quantity) < 10000"
          description: "Check for unreasonably large quantities"
      - dbt_utils.expression_is_true:
          expression: "MIN(InvoiceDate) >= '2010-01-01'"
          description: "Ensure data is within expected date range"